{"version":3,"sources":["images/oni.svg","components/Log.tsx","components/Splash.tsx","components/PostExecution.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Log","props","avgTypingDelay","stdTypingDelay","onTypingDone","Splash","className","src","oniSvg","alt","onClick","handleClick","PostExecution","App","React","useState","programInitiated","setProgramInitiated","programExecuted","setProgramExecuted","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4EAAAA,EAAOC,QAAU,IAA0B,iC,kKCM9BC,EAAM,SAACC,GAClB,OACE,gBAAC,IAAD,CACEC,eAAgB,EAChBC,eAAgB,EAChBC,aAAcH,EAAMG,cAEpB,2DAC+B,2BAD/B,4DAGM,2BAHN,mEAME,2BANF,oEASE,2BATF,sEAYE,2BACA,2BAbF,YAcW,2BAdX,6EAgB2B,2BAhB3B,qEAkB4B,2BAlB5B,6EAoBQ,2BApBR,uEAsBgC,2BAtBhC,wEAwBgC,2BAxBhC,mEA0BE,2BA1BF,oEA4BE,2BA5BF,mEA8BkD,2BA9BlD,wDAiCE,2BAjCF,uDAqCE,2BArCF,0DAyCE,2BAzCF,0DA6CE,2BA7CF,yDAiDE,2BAjDF,0DAqDE,2BArDF,0DAyDE,2BAzDF,yDA6DE,2BA7DF,uDAiEE,2BAjEF,wDAmEyD,2BAnEzD,uDAqEwD,2BArExD,yDAuE0D,2BAvE1D,yDAyE0D,2BAzE1D,sDA2EuD,2BA3EvD,4DA6E6D,2BA7E7D,wDA+EwD,2BA/ExD,wDAiFwD,2BAjFxD,sDAmFsD,2BAnFtD,sDAqFsD,2BArFtD,+DAuF8D,2BAvF9D,uDAyFsD,2BAzFtD,uDA2FsD,2BA3FtD,uDA6FsD,2BA7FtD,yDA+FwD,2BACtD,2BAhGF,mCAiGkC,2BAjGlC,qDAkGoD,2BAlGpD,oDAmG6C,2BAnG7C,qDAqGmB,2BArGnB,uDAuGe,8B,gBC9GRC,EAAS,SAACJ,GACrB,OACE,gCACE,uBAAKK,UAAU,iBACb,uBAAKC,IAAKC,IAAQF,UAAU,UAAUG,IAAI,SAE5C,uBAAKH,UAAU,kBACb,sGACA,guBAGA,+WAIF,0BAAQI,QAAST,EAAMU,aAAvB,gEClBOC,EAAgB,WAC3B,OACE,gCACE,uBAAKN,UAAU,iBACb,uBAAKC,IAAKC,IAAQF,UAAU,UAAUG,IAAI,SAE5C,uBAAKH,UAAU,kBACb,uFCsBOO,MAzBf,WAAgB,IAAD,EACmCC,IAAMC,UAAS,GADlD,mBACNC,EADM,KACYC,EADZ,OAEiCH,IAAMC,UAAS,GAFhD,mBAENG,EAFM,KAEWC,EAFX,KAYb,OACE,yBAAKb,UAAU,sBACXU,GAGCE,GAAmB,kBAAC,EAAD,CAAKd,aATN,WACvBe,GAAmB,MAMf,kBAAC,EAAD,CAAQR,YAXU,WACtBM,GAAoB,MAejBC,GAAmB,kBAAC,EAAD,QCfNE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDkIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.70b0263a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/oni.d2eb8d92.svg\";","import * as React from \"react\";\nimport Typist from \"react-typist\";\n\ninterface LogProps {\n  onTypingDone(): void;\n}\nexport const Log = (props: LogProps) => {\n  return (\n    <Typist\n      avgTypingDelay={0}\n      stdTypingDelay={0}\n      onTypingDone={props.onTypingDone}\n    >\n      <pre>\n        root$ lsof -n -itcp | head -4<br></br>\n        COMMAND&#09;&#09;PID&#09;&#09;USER&#09;&#09;FD&#09;&#09;TYPE&#09;&#09;DEVICE&#09;&#09;SIZE/OFF&#09;&#09;NODE\n        NAME<br></br>\n        rpcbind&#09;&#09;1509&#09;&#09;root&#09;&#09;8u&#09;&#09;IPv4&#09;&#09;9013&#09;&#09;0t0&#09;&#09;TCP&#09;&#09;*:sunrpc\n        (LISTEN)\n        <br></br>\n        rpcbind&#09;&#09;1509&#09;&#09;root&#09;&#09;11u&#09;&#09;IPv6&#09;&#09;9016&#09;&#09;0t0&#09;&#09;TCP&#09;&#09;*:sunrpc\n        (LISTEN)\n        <br></br>\n        rpc.statd&#09;&#09;1537&#09;&#09;statd&#09;&#09;8u&#09;&#09;IPv4&#09;&#09;10059&#09;&#09;0t0&#09;&#09;TCP&#09;&#09;*:36035\n        (LISTEN)\n        <br></br>\n        <br></br>\n        root$ top<br></br>\n        top - 13:29:09 up 2 days,&#09;&#09;7:13,&#09;&#09;1 users,&#09;&#09;load\n        average: 0.07, 0.02, 0.00<br></br>\n        Tasks: 148 total,&#09;&#09;1 running,&#09;&#09;147 sleeping,&#09;&#09;0\n        stopped,&#09;&#09;0 zombie<br></br>\n        Cpu(s):&#09;&#09;0.6%us,&#09;&#09;0.5%sy,&#09;&#09;0.0%ni,&#09;97.3%id,&#09;1.6%wa,&#09;0.0%hi,&#09;0.0%si,\n        0.0%st<br></br>\n        Mem:&#09;&#09;4051792k total,&#09;&#09;4026104k used,&#09;&#09;25688k\n        free,&#09;&#09;359168k buffers<br></br>\n        Swap:&#09;&#09;4096492k total,&#09;&#09;24296k used,&#09;&#09;4072196k\n        free,&#09;&#09;2806484k cached<br></br>\n        PID&#09;&#09;USER&#09;&#09;PR&#09;&#09;NI&#09;&#09;VIRT&#09;&#09;RES&#09;&#09;SHR&#09;&#09;S&#09;&#09;%CPU&#09;&#09;%MEM&#09;&#09;TIME+&#09;&#09;COMMAND\n        <br></br>\n        7629&#09;&#09;greys&#09;&#09;20&#09;&#09;0&#09;&#09;749m&#09;&#09;291m&#09;&#09;28m&#09;&#09;S&#09;&#09;1&#09;&#09;7.4&#09;&#09;16:51.40&#09;&#09;android\n        <br></br>\n        19935&#09;&#09;greys&#09;&#09;20&#09;&#09;0&#09;&#09;133m&#09;&#09;14m&#09;&#09;10m&#09;&#09;S&#09;&#09;0\n        &#09;&#09;0.4&#09;&#09;2:38.52&#09;&#09;smplayer<br></br>\n        &#09;&#09;1 root&#09;&#09;20 &#09;&#09;\n        0&#09;&#09;4020&#09;&#09;880&#09;&#09;592&#09;&#09;S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:00.96&#09;init\n        <br></br>\n        &#09;&#09;2 root&#09;&#09;15 &#09;&#09;-5&#09;&#09; 0&#09;&#09;\n        0&#09;&#09;\n        0&#09;&#09;S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:00.00&#09;kthreadd\n        <br></br>\n        &#09;&#09;3 root&#09;&#09;RT &#09;&#09;-5&#09;&#09; 0&#09;&#09;\n        0&#09;&#09;\n        0&#09;&#09;S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:00.04&#09;migration/0\n        <br></br>\n        &#09;&#09;4 root&#09;&#09;15 &#09;&#09;-5&#09;&#09; 0&#09;&#09;\n        0&#09;&#09;\n        0&#09;&#09;S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:00.90&#09;ksoftirqd/0\n        <br></br>\n        &#09;&#09;5 root&#09;&#09;RT &#09;&#09;-5&#09;&#09; 0&#09;&#09;\n        0&#09;&#09;\n        0&#09;&#09;S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:00.00&#09;watchdog/0\n        <br></br>\n        &#09;&#09;6 root&#09;&#09;RT &#09;&#09;-5&#09;&#09; 0&#09;&#09;\n        0&#09;&#09;\n        0&#09;&#09;S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:00.06&#09;migration/1\n        <br></br>\n        &#09;&#09;7 root&#09;&#09;15 &#09;&#09;-5&#09;&#09; 0&#09;&#09;\n        0&#09;&#09;\n        0&#09;&#09;S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:01.32&#09;ksoftirqd/1\n        <br></br>\n        &#09;&#09;8 root&#09;&#09;RT &#09;&#09;-5&#09;&#09; 0&#09;&#09;\n        0&#09;&#09;\n        0&#09;&#09;S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:00.00&#09;watchdog/1\n        <br></br>\n        &#09;&#09;9 root&#09;&#09;15 &#09;&#09;-5&#09;&#09; 0&#09;&#09;\n        0&#09;&#09;\n        0&#09;&#09;S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:02.14&#09;events/0\n        <br></br>\n        10 root &#09;&#09;15&#09;&#09;-5&#09;&#09;0&#09;&#09;0&#09;&#09;0\n        S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:01.44&#09;events/1<br></br>\n        11 root &#09;&#09;15&#09;&#09;-5&#09;&#09;0&#09;&#09;0&#09;&#09;0\n        S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:00.00&#09;khelper<br></br>\n        44 root &#09;&#09;15&#09;&#09;-5&#09;&#09;0&#09;&#09;0&#09;&#09;0\n        S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:01.26&#09;kblockd/0<br></br>\n        45 root &#09;&#09;15&#09;&#09;-5&#09;&#09;0&#09;&#09;0&#09;&#09;0\n        S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:01.98&#09;kblockd/1<br></br>\n        48 root &#09;&#09;15&#09;&#09;-5&#09;&#09;0&#09;&#09;0&#09;&#09;0\n        S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:00.00&#09;kacpid<br></br>\n        49 root &#09;&#09;15&#09;&#09;-5&#09;&#09;0&#09;&#09;0&#09;&#09;0\n        S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:00.00&#09;kacpi_notify<br></br>\n        153 root &#09;&#09;15&#09;&#09;-5&#09;&#09;0&#09;&#09;0&#09;&#09;0\n        S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:00.00&#09;kseriod<br></br>\n        203 root &#09;&#09;15&#09;&#09;-5&#09;&#09;0&#09;&#09;0&#09;&#09;0\n        S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:03.56&#09;kswapd0<br></br>\n        246 root &#09;&#09;15&#09;&#09;-5&#09;&#09;0&#09;&#09;0&#09;&#09;0\n        S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:00.00&#09;aio/0<br></br>\n        247 root &#09;&#09;15&#09;&#09;-5&#09;&#09;0&#09;&#09;0&#09;&#09;0\n        S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:00.00&#09;aio/1<br></br>\n        1595 root &#09;&#09;15&#09;&#09;-5&#09;&#09;0&#09;&#09;0&#09;&#09;0\n        S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:00.00&#09;ksuspend_usbd<br></br>\n        1601 root &#09;&#09;15&#09;&#09;-5&#09;&#09;0&#09;&#09;0&#09;&#09;0\n        S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:00.02&#09;khubd<br></br>\n        1612 root &#09;&#09;15&#09;&#09;-5&#09;&#09;0&#09;&#09;0&#09;&#09;0\n        S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:00.08&#09;ata/0<br></br>\n        1615 root &#09;&#09;15&#09;&#09;-5&#09;&#09;0&#09;&#09;0&#09;&#09;0\n        S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:08.28&#09;ata/1<br></br>\n        1616 root &#09;&#09;15&#09;&#09;-5&#09;&#09;0&#09;&#09;0&#09;&#09;0\n        S&#09;&#09;0&#09;&#09;0.0&#09;&#09;0:00.00&#09;ata_aux<br></br>\n        <br></br>\n        root$ ip address show dev enp0s8<br></br>\n        3: enp0s8: ROADCAST,MULTICAST,UP,LOWER_UP mtu 1500<br></br>qdisc\n        pfifo_fast state UP group default qlen 1000<br></br>\n        &#09;&#09;&#09;&#09;&#09;&#09;link/ether 08:00:27:6f:60:ff brd\n        ff:ff:ff:ff:ff:ff<br></br>\n        &#09;&#09;&#09;&#09;&#09;&#09;inet 10.0.0.51/24 brd 10.0.0.255 scope\n        global enp0s8<br></br>\n      </pre>\n    </Typist>\n  );\n};\n","import * as React from \"react\";\nimport oniSvg from \"../images/oni.svg\";\n\ninterface SplashProps {\n  handleClick(): void;\n}\nexport const Splash = (props: SplashProps) => {\n  return (\n    <>\n      <div className=\"svg-container\">\n        <img src={oniSvg} className=\"oni-svg\" alt=\"oni\" />\n      </div>\n      <div className=\"text-container\">\n        <h1>免責事項：お読みください</h1>\n        <p>\n          要ぐ展転めぐ速収飛ソセミ客世ロノムモ解3化37権みき細坂ラ観女びきへげ奥福ラヨ止件ぽぼ志再自クオマ大稿サヘケ横伸ゃン。細与なー拠選かる転確ソクツコ際感ヘリ楽98装チヌ映禁ぽべ際西まべゅた新初ひラてぐ断外洒ウネ考応ヘリクロ栃視へこるラ透沖レーリ。\n        </p>\n        <p>\n          市ヱア議図災ツルホナ化1辞築首げリる祀道のひゆ拝謙ぴ政死コソツ育者ヒコヤ味妥れづさ一画とま点定ラふ尾偽刀ぼドひね。\n        </p>\n      </div>\n      <button onClick={props.handleClick}>受け入れる-入力する...</button>\n    </>\n  );\n};\n","import * as React from \"react\";\nimport oniSvg from \"../images/oni.svg\";\n\nexport const PostExecution = () => {\n  return (\n    <>\n      <div className=\"svg-container\">\n        <img src={oniSvg} className=\"oni-svg\" alt=\"oni\" />\n      </div>\n      <div className=\"text-container\">\n        <h1>おはようございます</h1>\n      </div>\n    </>\n  );\n};\n","import React from \"react\";\nimport \"../styles/main.scss\";\nimport { Log } from \"./Log\";\nimport { Splash } from \"./Splash\";\nimport oniSvg from \"../images/oni.svg\";\nimport { PostExecution } from \"./PostExecution\";\n\nfunction App() {\n  const [programInitiated, setProgramInitiated] = React.useState(false);\n  const [programExecuted, setProgramExecuted] = React.useState(false);\n\n  const initiateProgram = () => {\n    setProgramInitiated(true);\n  };\n\n  const handleTypingDone = () => {\n    setProgramExecuted(true);\n  };\n\n  return (\n    <div className=\"main-container crt\">\n      {!programInitiated ? (\n        <Splash handleClick={initiateProgram} />\n      ) : (\n        !programExecuted && <Log onTypingDone={handleTypingDone} />\n      )}\n\n      {programExecuted && <PostExecution />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}